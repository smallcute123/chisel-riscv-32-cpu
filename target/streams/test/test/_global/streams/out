[debug] Running TaskDef(fetch.FetchTest, org.scalatest.tools.Framework$$anon$1@4814c614, false, [SuiteSelector])
[debug] Running TaskDef(passthrough.PassthroughTest, org.scalatest.tools.Framework$$anon$1@4814c614, false, [SuiteSelector])
[info] PassthroughTest:
[info] PassthroughGenerator
[info] - should pass through bits
[info] FetchTest:
[info] - fetch test *** FAILED ***
[info]   chiseltest.TimeoutException: timeout on Top.clock: IO[Clock] at 1000 idle cycles. You can extend the timeout by calling .setTimeout(<n>) on your clock (setting it to 0 means 'no timeout').
[info]   at chiseltest.internal.GenericBackend.$anonfun$run$7(GenericBackend.scala:188)
[info]   at chiseltest.internal.GenericBackend.$anonfun$run$7$adapted(GenericBackend.scala:185)
[info]   at scala.collection.mutable.HashMap$Node.foreach(HashMap.scala:627)
[info]   at scala.collection.mutable.HashMap.foreach(HashMap.scala:489)
[info]   at chiseltest.internal.GenericBackend.run(GenericBackend.scala:185)
[info]   at chiseltest.internal.Context$.$anonfun$run$1(Testers2.scala:34)
[info]   at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
[info]   at chiseltest.internal.Context$.run(Testers2.scala:34)
[info]   at chiseltest.ChiselScalatestTester.chiseltest$ChiselScalatestTester$$runTest(ChiselScalatestTester.scala:103)
[info]   at chiseltest.ChiselScalatestTester$TestBuilder.apply(ChiselScalatestTester.scala:31)
[info]   ...
[info] Run completed in 3 seconds, 60 milliseconds.
[info] Total number of tests run: 2
[info] Suites: completed 2, aborted 0
[info] Tests: succeeded 1, failed 1, canceled 0, ignored 0, pending 0
[info] *** 1 TEST FAILED ***
[debug] Passed tests:
[debug] 	passthrough.PassthroughTest
[error] Failed tests:
[error] 	fetch.FetchTest
[error] (Test / test) sbt.TestsFailedException: Tests unsuccessful
